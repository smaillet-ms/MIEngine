<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <Import Project="..\..\build\miengine.settings.targets" />
  <PropertyGroup>
    <MinimumVisualStudioVersion>14.0</MinimumVisualStudioVersion>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{54C33AFA-438D-4932-A2F0-D0F2BB2FADC9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>MICore</RootNamespace>
    <AssemblyName>Microsoft.MICore</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{786C830F-07A1-408B-BD7F-6EE04809D6DB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
    <TargetFrameworkVersion>v5.0</TargetFrameworkVersion>
    <OutputPath>$(MIDefaultOutputPath)</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <CodeAnalysisRuleSet>..\IDECodeAnalysis.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug.Lab|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release.Lab|AnyCPU'">
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug-PortablePDB|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>portable</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <CodeAnalysisRuleSet>..\IDECodeAnalysis.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <None Include="LaunchOptions.xsd" />
    <None Include="project.json" />
    <None Include="SetMIDebugLogging.cmd" />
    <None Include="ValidateDesignerFile.cmd" />
    <None Include="PostProcessXsdOutput.cmd" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="CommandLock.cs" />
    <Compile Include="Debugger.cs" />
    <Compile Include="InvalidLaunchOptionsException.cs" />
    <Compile Include="LaunchCommand.cs" />
    <Compile Include="LaunchOptions.cs" />
    <Compile Include="LaunchOptions.xsd.types.desginer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>LaunchOptions.xsd</DependentUpon>
    </Compile>
    <Compile Include="Logger.cs" />
    <Compile Include="MICommandFactory.cs" />
    <Compile Include="MICoreResources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MICoreResources.resx</DependentUpon>
    </Compile>
    <Compile Include="MIException.cs" />
    <Compile Include="MIResults.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Transports\ITransport.cs" />
    <Compile Include="Transports\LocalTransport.cs" />
    <Compile Include="Transports\MockTransport.cs" />
    <Compile Include="Transports\PipeTransport.cs" />
    <Compile Include="Transports\StreamTransport.cs" />
    <Compile Include="Transports\TcpTransport.cs" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="ExampleLaunchOptions.xml" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="MICoreResources.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>MICoreResources.Designer.cs</LastGenOutput>
      <SubType>Designer</SubType>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <GlassDirCopy Include="$(OutDir)$(AssemblyName)$(TargetExt)" />
    <GlassDirCopy Include="$(OutDir)$(AssemblyName).XmlSerializers.dll" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\DebugEngineHost.Stub\DebugEngineHost.Stub.csproj">
      <Project>{ea876a2d-ab0f-4204-97dd-dfb3b5568978}</Project>
      <Name>DebugEngineHost.Stub</Name>
      <Private>False</Private>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets" />
  <Import Project="..\..\build\miengine.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it.
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="AfterBuild">
  </Target>
  -->
  <!--This is a target file used to generate + validate LaunchOptions.xsd.types.desginer.cs. The way this works is that we have a baseline
  file checked in. This target will create a new one, and if it is different from the baseline, it will update the baseline.
  NOTE: We skip this step for the lab configuration to ensure that in the lab we build exsactly what is checked in.-->
  <Target Name="BeforeBuild" Inputs="LaunchOptions.xsd;ValidateDesignerFile.cmd;PostProcessXsdOutput.cmd" Outputs="$(IntermediateOutputPath)LaunchOptions.xsd.types.desginer-candidate.cs" Condition="'$(Configuration)' != 'Debug.Lab' And '$(Configuration)' != 'Release.Lab'">
    <!--First validate the tools we need are where we expect-->
    <Error Condition="'$(SDK40ToolsPath)'==''" Text="SDK40ToolsPath msbuild property is undefined." />
    <Error Condition="!Exists('$(SDK40ToolsPath)xsd.exe')" Text="xsd.exe does not exist in the SDK40ToolsPath ($(SDK40ToolsPath)xsd.exe)." />
    <!--Convert the .xsd -> types -->
    <MakeDir Condition="!Exists('$(IntermediateOutputPath)')" Directories="$(IntermediateOutputPath)" />
    <Exec Command="&quot;$(SDK40ToolsPath)xsd.exe&quot; &quot;LaunchOptions.xsd&quot; /classes /fields /namespace:$(RootNamespace).Xml.LaunchOptions /out:&quot;$(IntermediateOutputPath).&quot;" />
    <!--Process the output from xsd.exe into LaunchOptions.xsd.types.desginer-candidate.cs -->
    <Exec Command="PostProcessXsdOutput.cmd &quot;$(IntermediateOutputPath)LaunchOptions.cs&quot; &quot;$(IntermediateOutputPath)LaunchOptions.xsd.types.desginer-candidate.cs&quot;" />
    <!--Update the checked in types designer file if it is out of date-->
    <Exec Command="ValidateDesignerFile.cmd LaunchOptions.xsd.types.desginer.cs $(IntermediateOutputPath)LaunchOptions.xsd.types.desginer-candidate.cs &quot;$(IntermediateOutputPath)&quot;" />
  </Target>
  <!--This target is used to generate an XML serializers assembly for the types in LaunchOptions.xsd. We can't embed these types
  into MICore as CoreCLR doesn't expose the types needed to make that code work.-->
  <Target Name="GenerateXmlSerializersAssembly" AfterTargets="Compile" Inputs="LaunchOptions.xsd.types.desginer.cs;$(AssemblyOriginatorKeyFile)" Outputs="$(IntermediateOutputPath)sgen\$(AssemblyName).XmlSerializers.dll">
    <PropertyGroup>
      <SereializationSigningCompilerOptions>/keyfile:$(AssemblyOriginatorKeyFile)</SereializationSigningCompilerOptions>
      <SereializationSigningCompilerOptions Condition="'$(DelaySign)'=='true'">$(SereializationSigningCompilerOptions) /delaysign</SereializationSigningCompilerOptions>
    </PropertyGroup>
    <Error Condition="'$(SDK40ToolsPath)'==''" Text="SDK40ToolsPath msbuild property is undefined." />
    <Error Condition="'$(MSBuildBinPath)'==''" Text="MSBuildBinPath msbuild property is undefined" />
    <Error Condition="!Exists('$(SDK40ToolsPath)sgen.exe')" Text="sgen.exe does not exist in the SDK40ToolsPath ($(SDK40ToolsPath)xsd.exe)." />
    <Error Condition="!Exists('$(MSBuildBinPath)\csc.exe')" Text="csc.exe does not exist in MSBuildBinPath ($(MSBuildBinPath))" />
    <RemoveDir Condition="Exists('$(IntermediateOutputPath)sgen')" Directories="$(IntermediateOutputPath)sgen" />
    <MakeDir Directories="$(IntermediateOutputPath)sgen" />
    <!--Compile the types file into an assembly that we can use as input to sgen. We don't want to pass our real assembly as we have some things that sgen doesn't like.-->
    <Exec Command="&quot;$(MSBuildBinPath)\csc.exe&quot; LaunchOptions.xsd.types.desginer.cs $(GeneratedAssemblyInfoFile) /out:$(IntermediateOutputPath)sgen\$(AssemblyName).dll /target:library /noconfig $(SereializationSigningCompilerOptions) /r:$(MSBuildFrameworkToolsPath)\System.dll /r:$(MSBuildFrameworkToolsPath)\System.XML.dll" />
    <!--Now generate the serialization assembly-->
    <Exec Command="&quot;$(SDK40ToolsPath)sgen.exe&quot; $(IntermediateOutputPath)sgen\$(AssemblyName).dll /force /compiler:&quot;$(SereializationSigningCompilerOptions)&quot; /keep" />
  </Target>
  <!--To get the seralization assembly copied to the vsix, and also to the output directory, we have this target
  which adds the XmlSerializers as if it was a source item in our project with a 'CopyToOutputDirectory' child
  node. See the 'GetCopyToOutputDirectoryItems' target in C:\Program Files (x86)\MSBuild\14.0\Bin\Microsoft.Common.CurrentVersion.targets
  for more info.-->
  <Target Name="AddXmlSerializersAssemblyToOutputGroup" BeforeTargets="GetCopyToOutputDirectoryItems">
    <ItemGroup>
      <_GenerateXmlSerializersAssemblyOutput Include="$(IntermediateOutputPath)sgen\$(AssemblyName).XmlSerializers.dll" />
      <_SourceItemsToCopyToOutputDirectoryAlways Include="@(_GenerateXmlSerializersAssemblyOutput->'%(FullPath)')">
        <TargetPath>$(AssemblyName).XmlSerializers.dll</TargetPath>
      </_SourceItemsToCopyToOutputDirectoryAlways>
    </ItemGroup>
  </Target>
</Project>